<% macro workflow(targets, publications, servers, subdist="", publish_all=False) %>
  prep:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.whichver.outputs.branch }}
<% if subdist == "nightly" %>
<% for server in servers %>
<%- set server = server.replace(".", "-") -%>
<% for tgt in targets.linux + targets.macos %>
<%- set key = tgt.name + "-gel-" + server %>
      if_<< key.replace('-', '_') >>: ${{ steps.scm.outputs.if_<< key.replace('-', '_') >> }}
<% if server == "nightly" %>
      nightly_<< key.replace('-', '_') >>: ${{ steps.scm.outputs.nightly_<< key.replace('-', '_') >> }}
<% endif %>
<% endfor %>
<% endfor %>
<% endif %>
    steps:
    - uses: actions/checkout@v4

    - name: Determine package version
      shell: bash
      run: |
        branch=${GITHUB_REF#refs/heads/}
        echo branch="${branch}" >> $GITHUB_OUTPUT
      id: whichver

<% if subdist == "nightly" %>
    - name: Determine SCM revision
      id: scm
      shell: bash
      run: |
        rev=$(git rev-parse HEAD)
        jq_filter='.packages[] | select(.basename == $NAME) | select(.architecture == $ARCH) | .version_details.metadata.scm_revision | . as $rev | select(($rev != null) and ($REV | startswith($rev)))'
<% for server in servers %>
<%- set server = server.replace(".", "-") -%>
<% for tgt in targets.linux + targets.macos %>
        key="<< tgt.name >>-gel-<< server >>"
        name="edgedb-server-<< server >>-postgis"
        val=true

<% if tgt.family == "debian" %>
        idx_file=<< tgt.platform_version >>.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file

<% elif tgt.family == "redhat" %>
        idx_file=el<< tgt.platform_version >>.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file

<% elif tgt.family == "generic" %>
        idx_file=<< tgt.platform_version >>-unknown-linux-<< "{}".format(tgt.platform_libc) if tgt.platform_libc else "gnu" >>.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file

<% elif tgt.platform == "macos" %>
        idx_file=<< tgt.platform_version >>-apple-darwin.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file

<% endif %>
        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "<< tgt.arch >>" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT

<% if server == "nightly" %>
        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "<< tgt.arch >>" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT
<% endif %>

<% endfor %>
<% endfor %>
<% endif %>

<%- for server in servers %>
<%- set server = server.replace(".", "-") -%>

<%- for tgt in targets.linux %>
<%- set plat_id = tgt.platform + ("{}".format(tgt.platform_libc) if tgt.platform_libc else "") + ("-{}".format(tgt.platform_version) if tgt.platform_version else "") %>
<%- set key = tgt.name + "-gel-" + server %>

<%- if server == 'nightly' -%>
<%- set server_ver = "${{ needs.prep.outputs.nightly_" + key.replace('-', '_') + " }}" -%>
<%- else %>
<%- set server_ver = server -%>
<% endif %>

  build-<< key >>:
    runs-on: << tgt.runs_on if tgt.runs_on else "ubuntu-latest" >>
    needs: prep
<% if subdist == "nightly" %>
    if: needs.prep.outputs.if_<< key.replace('-', '_') >> == 'true'
<% endif %>

    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/<< plat_id >>@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        <%- if subdist != "nightly" %>
        SRC_REF: "<< server_ver >>!${{ needs.prep.outputs.branch }}"
        <%- else %>
        SRC_REF: "<< server_ver >>!${{ github.sha }}"
        <%- endif %>
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=<< server_ver >>"
        PKG_COMPRESSION: "zstd,zip"
        <%- if subdist != "" %>
        PKG_SUBDIST: "<< subdist >>"
        <%- endif %>
        PKG_PLATFORM: "<< tgt.platform >>"
        PKG_PLATFORM_VERSION: "<< tgt.platform_version >>"
        EXTRA_OPTIMIZATIONS: "true"
        <%- if subdist != "nightly" %>
        BUILD_IS_RELEASE: "true"
        <%- endif %>
        <%- if tgt.family == "generic" %>
        BUILD_GENERIC: true
        <%- endif %>
        <%- if tgt.platform_libc %>
        PKG_PLATFORM_LIBC: "<< tgt.platform_libc >>"
        <%- endif %>
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-<< key >>
        path: artifacts/<< plat_id >>
<%- endfor %>

<%- for tgt in targets.macos %>
<%- set plat_id = tgt.platform + ("{}".format(tgt.platform_libc) if tgt.platform_libc else "") + ("-{}".format(tgt.platform_version) if tgt.platform_version else "") %>
<%- set key = tgt.name + "-gel-" + server %>

<%- if server == 'nightly' -%>
<%- set server_ver = "${{ needs.prep.outputs.nightly_" + key.replace('-', '_') + " }}" -%>
<%- else %>
<%- set server_ver = server -%>
<% endif %>

  build-<< key >>:
    runs-on: << tgt.runs_on if tgt.runs_on else "macos-latest" >>
    needs: prep
<% if subdist == "nightly" %>
    if: needs.prep.outputs.if_<< key.replace('-', '_') >> == 'true'
<% endif %>

    steps:

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Set up Python
      uses: actions/setup-python@v5
      if: << 'false' if tgt.runs_on and 'self-hosted' in tgt.runs_on else 'true' >>
      with:
        python-version: "3.x"

    - name: Set up NodeJS
      uses: actions/setup-node@v4
      if: << 'false' if tgt.runs_on and 'self-hosted' in tgt.runs_on else 'true' >>
      with:
        node-version: '20'

    - name: Install dependencies
      if: << 'false' if tgt.runs_on and 'self-hosted' in tgt.runs_on else 'true' >>
      run: |
        env HOMEBREW_NO_AUTO_UPDATE=1 brew install libmagic

    - name: Build
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        <%- if subdist != "nightly" %>
        SRC_REF: "<< server_ver >>!${{ needs.prep.outputs.branch }}"
        <%- else %>
        SRC_REF: "<< server_ver >>!${{ github.sha }}"
        <%- endif %>
        <%- if subdist != "nightly" %>
        BUILD_IS_RELEASE: "true"
        <%- endif %>
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=<< server >>"
        PKG_COMPRESSION: "zstd,zip"
        <%- if subdist != "" %>
        PKG_SUBDIST: "<< subdist >>"
        <%- endif %>
        PKG_PLATFORM: "<< tgt.platform >>"
        PKG_PLATFORM_VERSION: "<< tgt.platform_version >>"
        PKG_PLATFORM_ARCH: "<< tgt.arch if tgt.arch else '' >>"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled
        <%- if tgt.family == "generic" %>
        BUILD_GENERIC: true
        <%- endif %>
      run: |
        edgedb-pkg/integration/macos/build.sh

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-<< key >>
        path: artifacts/<< plat_id >>
<%- endfor %>
<%- endfor %>

<%- if publish_all %>
  collect:
    needs:
    <%- for server in servers %>
    <%- set server = server.replace(".", "-") -%>
    <%- for tgt in targets.linux + targets.macos %>
    <%- set key = tgt.name + "-gel-" + server %>
    - build-<< key >>
    <%- endfor %>
    <%- endfor %>
    runs-on: ubuntu-latest
    steps:
      - run: echo 'All build+tests passed, ready to publish now!'
<%- endif %>

<%- for server in servers %>
<%- set server = server.replace(".", "-") -%>
<%- for tgt in targets.linux %>
<%- set plat_id = tgt.platform + ("{}".format(tgt.platform_libc) if tgt.platform_libc else "") + ("-{}".format(tgt.platform_version) if tgt.platform_version else "") %>
<%- set key = tgt.name + "-gel-" + server %>
<%- for publish in publications %>

  publish<< publish.suffix >>-<< key >>:
    needs: [<% if publish_all %>collect<% else %>build-<< key >><% endif %>]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-<< key >>
        path: artifacts/<< plat_id >>

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        <%- if subdist != "" %>
        PKG_SUBDIST: "<< subdist >>"
        <%- endif %>
        <%- if publish.server != "" %>
        PACKAGE_SERVER: << publish.server >>
        <%- endif %>
        PKG_PLATFORM: "<< tgt.platform >>"
        PKG_PLATFORM_VERSION: "<< tgt.platform_version >>"
        PKG_PLATFORM_LIBC: "<< tgt.platform_libc >>"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

<%- endfor %>
<%- endfor %>
<%- endfor %>

<%- if publications %>
<%- for server in servers %>
<%- set server = server.replace(".", "-") -%>
<%- for tgt in targets.macos %>
<%- set key = tgt.name + "-gel-" + server %>
<%- set plat_id = tgt.platform + ("{}".format(tgt.platform_libc) if tgt.platform_libc else "") + ("-{}".format(tgt.platform_version) if tgt.platform_version else "") %>
<%- for publish in publications %>

  publish<< publish.suffix >>-<< key >>:
    needs: [<% if publish_all %>collect<% else %>build-<< key >><% endif %>]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-<< key >>
        path: artifacts/<< plat_id >>

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: << plat_id >>

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        <%- if subdist != "" %>
        PKG_SUBDIST: "<< subdist >>"
        <%- endif %>
        PKG_PLATFORM: "<< tgt.platform >>"
        PKG_PLATFORM_VERSION: "<< tgt.platform_version >>"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"
<%- endfor %>
<%- endfor %>
<%- endfor %>
<%- endif %>

  workflow-notifications:
    if: failure() && github.event_name != 'pull_request'
    name: Notify in Slack on failures

    needs:
      - prep
    <%- if publish_all %>
      - collect
    <%- else %>
    <%- endif %>
    <%- for server in servers %>
    <%- set server = server.replace(".", "-") -%>
    <%- for tgt in targets.linux %>
    <%- set key = tgt.name + "-gel-" + server %>
      - build-<< key >>
    <%- for publish in publications %>
      - publish<< publish.suffix>>-<< key >>
    <%- endfor %>
    <%- endfor %>
    <%- for tgt in targets.macos %>
    <%- set key = tgt.name + "-gel-" + server %>
      - build-<< key >>
    <%- for publish in publications %>
      - publish<< publish.suffix>>-<< tgt.name >>
    <%- endfor %>
    <%- endfor %>
    <%- endfor %>
    runs-on: ubuntu-latest
    permissions:
      actions: 'read'
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@26a36836c887f260477432e4314ec3490a84f309
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.ACTIONS_SLACK_WEBHOOK_URL}}
          name: 'Workflow notifications'
          icon_emoji: ':hammer:'
          include_jobs: 'on-failure'

<%- endmacro %>
