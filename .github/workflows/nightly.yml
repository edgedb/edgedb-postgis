name: Build Test and Publish Nightly Packages

on:
  schedule:
    # Deliberately scheduled 4 hours after edgedb nightly
    - cron: "0 5 * * *"
  workflow_dispatch:
    inputs: {}
  push:
    branches:
      - nightly

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.whichver.outputs.branch }}


      if_debian_buster_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_buster_x86_64_gel_6_rc_2 }}


      if_debian_buster_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_buster_aarch64_gel_6_rc_2 }}


      if_debian_bullseye_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_bullseye_x86_64_gel_6_rc_2 }}


      if_debian_bullseye_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_bullseye_aarch64_gel_6_rc_2 }}


      if_debian_bookworm_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_bookworm_x86_64_gel_6_rc_2 }}


      if_debian_bookworm_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_debian_bookworm_aarch64_gel_6_rc_2 }}


      if_ubuntu_focal_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_focal_x86_64_gel_6_rc_2 }}


      if_ubuntu_focal_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_focal_aarch64_gel_6_rc_2 }}


      if_ubuntu_jammy_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_jammy_x86_64_gel_6_rc_2 }}


      if_ubuntu_jammy_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_jammy_aarch64_gel_6_rc_2 }}


      if_ubuntu_noble_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_noble_x86_64_gel_6_rc_2 }}


      if_ubuntu_noble_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_ubuntu_noble_aarch64_gel_6_rc_2 }}


      if_centos_8_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_centos_8_x86_64_gel_6_rc_2 }}


      if_centos_8_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_centos_8_aarch64_gel_6_rc_2 }}


      if_rockylinux_9_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_rockylinux_9_x86_64_gel_6_rc_2 }}


      if_rockylinux_9_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_rockylinux_9_aarch64_gel_6_rc_2 }}


      if_linux_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_linux_x86_64_gel_6_rc_2 }}


      if_linux_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_linux_aarch64_gel_6_rc_2 }}


      if_linuxmusl_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_linuxmusl_x86_64_gel_6_rc_2 }}


      if_linuxmusl_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_linuxmusl_aarch64_gel_6_rc_2 }}


      if_macos_x86_64_gel_6_rc_2: ${{ steps.scm.outputs.if_macos_x86_64_gel_6_rc_2 }}


      if_macos_aarch64_gel_6_rc_2: ${{ steps.scm.outputs.if_macos_aarch64_gel_6_rc_2 }}



      if_debian_buster_x86_64_gel_nightly: ${{ steps.scm.outputs.if_debian_buster_x86_64_gel_nightly }}

      nightly_debian_buster_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_buster_x86_64_gel_nightly }}


      if_debian_buster_aarch64_gel_nightly: ${{ steps.scm.outputs.if_debian_buster_aarch64_gel_nightly }}

      nightly_debian_buster_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_buster_aarch64_gel_nightly }}


      if_debian_bullseye_x86_64_gel_nightly: ${{ steps.scm.outputs.if_debian_bullseye_x86_64_gel_nightly }}

      nightly_debian_bullseye_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_bullseye_x86_64_gel_nightly }}


      if_debian_bullseye_aarch64_gel_nightly: ${{ steps.scm.outputs.if_debian_bullseye_aarch64_gel_nightly }}

      nightly_debian_bullseye_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_bullseye_aarch64_gel_nightly }}


      if_debian_bookworm_x86_64_gel_nightly: ${{ steps.scm.outputs.if_debian_bookworm_x86_64_gel_nightly }}

      nightly_debian_bookworm_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_bookworm_x86_64_gel_nightly }}


      if_debian_bookworm_aarch64_gel_nightly: ${{ steps.scm.outputs.if_debian_bookworm_aarch64_gel_nightly }}

      nightly_debian_bookworm_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_debian_bookworm_aarch64_gel_nightly }}


      if_ubuntu_focal_x86_64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_focal_x86_64_gel_nightly }}

      nightly_ubuntu_focal_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_focal_x86_64_gel_nightly }}


      if_ubuntu_focal_aarch64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_focal_aarch64_gel_nightly }}

      nightly_ubuntu_focal_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_focal_aarch64_gel_nightly }}


      if_ubuntu_jammy_x86_64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_jammy_x86_64_gel_nightly }}

      nightly_ubuntu_jammy_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_jammy_x86_64_gel_nightly }}


      if_ubuntu_jammy_aarch64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_jammy_aarch64_gel_nightly }}

      nightly_ubuntu_jammy_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_jammy_aarch64_gel_nightly }}


      if_ubuntu_noble_x86_64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_noble_x86_64_gel_nightly }}

      nightly_ubuntu_noble_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_noble_x86_64_gel_nightly }}


      if_ubuntu_noble_aarch64_gel_nightly: ${{ steps.scm.outputs.if_ubuntu_noble_aarch64_gel_nightly }}

      nightly_ubuntu_noble_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_ubuntu_noble_aarch64_gel_nightly }}


      if_centos_8_x86_64_gel_nightly: ${{ steps.scm.outputs.if_centos_8_x86_64_gel_nightly }}

      nightly_centos_8_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_centos_8_x86_64_gel_nightly }}


      if_centos_8_aarch64_gel_nightly: ${{ steps.scm.outputs.if_centos_8_aarch64_gel_nightly }}

      nightly_centos_8_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_centos_8_aarch64_gel_nightly }}


      if_rockylinux_9_x86_64_gel_nightly: ${{ steps.scm.outputs.if_rockylinux_9_x86_64_gel_nightly }}

      nightly_rockylinux_9_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_rockylinux_9_x86_64_gel_nightly }}


      if_rockylinux_9_aarch64_gel_nightly: ${{ steps.scm.outputs.if_rockylinux_9_aarch64_gel_nightly }}

      nightly_rockylinux_9_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_rockylinux_9_aarch64_gel_nightly }}


      if_linux_x86_64_gel_nightly: ${{ steps.scm.outputs.if_linux_x86_64_gel_nightly }}

      nightly_linux_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_linux_x86_64_gel_nightly }}


      if_linux_aarch64_gel_nightly: ${{ steps.scm.outputs.if_linux_aarch64_gel_nightly }}

      nightly_linux_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_linux_aarch64_gel_nightly }}


      if_linuxmusl_x86_64_gel_nightly: ${{ steps.scm.outputs.if_linuxmusl_x86_64_gel_nightly }}

      nightly_linuxmusl_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_linuxmusl_x86_64_gel_nightly }}


      if_linuxmusl_aarch64_gel_nightly: ${{ steps.scm.outputs.if_linuxmusl_aarch64_gel_nightly }}

      nightly_linuxmusl_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_linuxmusl_aarch64_gel_nightly }}


      if_macos_x86_64_gel_nightly: ${{ steps.scm.outputs.if_macos_x86_64_gel_nightly }}

      nightly_macos_x86_64_gel_nightly: ${{ steps.scm.outputs.nightly_macos_x86_64_gel_nightly }}


      if_macos_aarch64_gel_nightly: ${{ steps.scm.outputs.if_macos_aarch64_gel_nightly }}

      nightly_macos_aarch64_gel_nightly: ${{ steps.scm.outputs.nightly_macos_aarch64_gel_nightly }}




    steps:
    - uses: actions/checkout@v4

    - name: Determine package version
      shell: bash
      run: |
        branch=${GITHUB_REF#refs/heads/}
        echo branch="${branch}" >> $GITHUB_OUTPUT
      id: whichver


    - name: Determine SCM revision
      id: scm
      shell: bash
      run: |
        rev=$(git rev-parse HEAD)
        jq_filter='.packages[] | select(.basename == $NAME) | select(.architecture == $ARCH) | .version_details.metadata.scm_revision | . as $rev | select(($rev != null) and ($REV | startswith($rev)))'

        key="debian-buster-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=buster.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="debian-buster-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=buster.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="debian-bullseye-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=bullseye.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="debian-bullseye-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=bullseye.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="debian-bookworm-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=bookworm.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="debian-bookworm-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=bookworm.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-focal-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=focal.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-focal-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=focal.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-jammy-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=jammy.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-jammy-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=jammy.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-noble-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=noble.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="ubuntu-noble-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=noble.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="centos-8-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=el8.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="centos-8-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=el8.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="rockylinux-9-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=el9.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="rockylinux-9-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=el9.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="linux-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=x86_64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="linux-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=aarch64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="linuxmusl-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=x86_64-unknown-linux-musl.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="linuxmusl-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=aarch64-unknown-linux-musl.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="macos-x86_64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=x86_64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT




        key="macos-aarch64-gel-6-rc-2"
        name="edgedb-server-6-rc-2-postgis"
        val=true


        idx_file=aarch64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT





        key="debian-buster-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=buster.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="debian-buster-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=buster.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="debian-bullseye-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=bullseye.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="debian-bullseye-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=bullseye.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="debian-bookworm-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=bookworm.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="debian-bookworm-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=bookworm.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-focal-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=focal.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-focal-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=focal.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-jammy-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=jammy.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-jammy-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=jammy.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-noble-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=noble.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="ubuntu-noble-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=noble.nightly.json
        url=https://packages.edgedb.com/apt/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="centos-8-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=el8.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="centos-8-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=el8.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="rockylinux-9-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=el9.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="rockylinux-9-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=el9.nightly.json
        url=https://packages.edgedb.com/rpm/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="linux-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=x86_64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="linux-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=aarch64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="linuxmusl-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=x86_64-unknown-linux-musl.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="linuxmusl-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=aarch64-unknown-linux-musl.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="macos-x86_64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=x86_64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "x86_64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "x86_64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT



        key="macos-aarch64-gel-nightly"
        name="edgedb-server-nightly-postgis"
        val=true


        idx_file=aarch64-unknown-linux-gnu.nightly.json
        url=https://packages.edgedb.com/archive/.jsonindexes/$idx_file


        tmp_file="/tmp/$idx_file"

        if [ ! -e "$tmp_file" ]; then
          curl --fail -o $tmp_file -s $url || true
        fi
        if [ -e "$tmp_file" ]; then
          out=$(< "$tmp_file" jq -r --arg NAME "$name" --arg REV "$rev" --arg ARCH "aarch64" "$jq_filter")
          if [ -n "$out" ]; then
            echo "Skip rebuilding existing ${key}"
            val=false
          fi
        fi

        echo if_${key//-/_}="$val" >> $GITHUB_OUTPUT


        nightly_ver=$(< "$tmp_file" jq -r --arg ARCH "aarch64" 'first(.packages | sort_by(.build_date) | reverse | .[] | select(.basename == "gel-server") | select(.architecture == $ARCH)).version | split("+")[0]')
        if [ -z "$nightly_ver" ]; then
            nightly_ver=INVALID
        fi
        echo nightly_${key//-/_}="$nightly_ver" >> $GITHUB_OUTPUT






  build-debian-buster-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_buster_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-buster-x86_64-gel-6-rc-2
        path: artifacts/debian-buster

  build-debian-buster-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_buster_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-buster-aarch64-gel-6-rc-2
        path: artifacts/debian-buster

  build-debian-bullseye-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_bullseye_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bullseye@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bullseye-x86_64-gel-6-rc-2
        path: artifacts/debian-bullseye

  build-debian-bullseye-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_bullseye_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bullseye@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bullseye-aarch64-gel-6-rc-2
        path: artifacts/debian-bullseye

  build-debian-bookworm-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_bookworm_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bookworm@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bookworm-x86_64-gel-6-rc-2
        path: artifacts/debian-bookworm

  build-debian-bookworm-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_bookworm_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bookworm@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bookworm-aarch64-gel-6-rc-2
        path: artifacts/debian-bookworm

  build-ubuntu-focal-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_focal_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-focal@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-focal-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-focal

  build-ubuntu-focal-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_focal_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-focal@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-focal-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-focal

  build-ubuntu-jammy-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_jammy_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-jammy@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-jammy-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-jammy

  build-ubuntu-jammy-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_jammy_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-jammy@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-jammy-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-jammy

  build-ubuntu-noble-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_noble_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-noble@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-noble-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-noble

  build-ubuntu-noble-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_noble_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-noble@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-noble-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-noble

  build-centos-8-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_centos_8_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-8@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-centos-8-x86_64-gel-6-rc-2
        path: artifacts/centos-8

  build-centos-8-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_centos_8_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-8@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-centos-8-aarch64-gel-6-rc-2
        path: artifacts/centos-8

  build-rockylinux-9-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_rockylinux_9_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/rockylinux-9@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-rockylinux-9-x86_64-gel-6-rc-2
        path: artifacts/rockylinux-9

  build-rockylinux-9-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_rockylinux_9_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/rockylinux-9@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-rockylinux-9-aarch64-gel-6-rc-2
        path: artifacts/rockylinux-9

  build-linux-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_linux_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linux-x86_64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linux-x86_64-gel-6-rc-2
        path: artifacts/linux-x86_64

  build-linux-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_linux_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linux-aarch64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linux-aarch64-gel-6-rc-2
        path: artifacts/linux-aarch64

  build-linuxmusl-x86_64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_linuxmusl_x86_64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linuxmusl-x86_64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        PKG_PLATFORM_LIBC: "musl"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linuxmusl-x86_64-gel-6-rc-2
        path: artifacts/linuxmusl-x86_64

  build-linuxmusl-aarch64-gel-6-rc-2:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_linuxmusl_aarch64_gel_6_rc_2 == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linuxmusl-aarch64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        PKG_PLATFORM_LIBC: "musl"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linuxmusl-aarch64-gel-6-rc-2
        path: artifacts/linuxmusl-aarch64

  build-macos-x86_64-gel-6-rc-2:
    runs-on: ['macos-13']
    needs: prep

    if: needs.prep.outputs.if_macos_x86_64_gel_6_rc_2 == 'true'


    steps:

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Set up Python
      uses: actions/setup-python@v5
      if: true
      with:
        python-version: "3.x"

    - name: Set up NodeJS
      uses: actions/setup-node@v4
      if: true
      with:
        node-version: '20'

    - name: Install dependencies
      if: true
      run: |
        env HOMEBREW_NO_AUTO_UPDATE=1 brew install libmagic

    - name: Build
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_ARCH: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled
        BUILD_GENERIC: true
      run: |
        edgedb-pkg/integration/macos/build.sh

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-macos-x86_64-gel-6-rc-2
        path: artifacts/macos-x86_64

  build-macos-aarch64-gel-6-rc-2:
    runs-on: ['macos-14']
    needs: prep

    if: needs.prep.outputs.if_macos_aarch64_gel_6_rc_2 == 'true'


    steps:

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Set up Python
      uses: actions/setup-python@v5
      if: true
      with:
        python-version: "3.x"

    - name: Set up NodeJS
      uses: actions/setup-node@v4
      if: true
      with:
        node-version: '20'

    - name: Install dependencies
      if: true
      run: |
        env HOMEBREW_NO_AUTO_UPDATE=1 brew install libmagic

    - name: Build
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "6-rc-2!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=6-rc-2"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_ARCH: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled
        BUILD_GENERIC: true
      run: |
        edgedb-pkg/integration/macos/build.sh

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-macos-aarch64-gel-6-rc-2
        path: artifacts/macos-aarch64

  build-debian-buster-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_buster_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_buster_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_buster_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-buster-x86_64-gel-nightly
        path: artifacts/debian-buster

  build-debian-buster-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_buster_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_buster_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_buster_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-buster-aarch64-gel-nightly
        path: artifacts/debian-buster

  build-debian-bullseye-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_bullseye_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bullseye@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_bullseye_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_bullseye_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bullseye-x86_64-gel-nightly
        path: artifacts/debian-bullseye

  build-debian-bullseye-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_bullseye_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bullseye@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_bullseye_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_bullseye_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bullseye-aarch64-gel-nightly
        path: artifacts/debian-bullseye

  build-debian-bookworm-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_debian_bookworm_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bookworm@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_bookworm_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_bookworm_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bookworm-x86_64-gel-nightly
        path: artifacts/debian-bookworm

  build-debian-bookworm-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_debian_bookworm_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-bookworm@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_debian_bookworm_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_debian_bookworm_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-debian-bookworm-aarch64-gel-nightly
        path: artifacts/debian-bookworm

  build-ubuntu-focal-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_focal_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-focal@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_focal_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_focal_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-focal-x86_64-gel-nightly
        path: artifacts/ubuntu-focal

  build-ubuntu-focal-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_focal_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-focal@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_focal_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_focal_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-focal-aarch64-gel-nightly
        path: artifacts/ubuntu-focal

  build-ubuntu-jammy-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_jammy_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-jammy@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_jammy_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_jammy_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-jammy-x86_64-gel-nightly
        path: artifacts/ubuntu-jammy

  build-ubuntu-jammy-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_jammy_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-jammy@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_jammy_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_jammy_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-jammy-aarch64-gel-nightly
        path: artifacts/ubuntu-jammy

  build-ubuntu-noble-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_noble_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-noble@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_noble_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_noble_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-noble-x86_64-gel-nightly
        path: artifacts/ubuntu-noble

  build-ubuntu-noble-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_ubuntu_noble_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/ubuntu-noble@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_ubuntu_noble_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_ubuntu_noble_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-ubuntu-noble-aarch64-gel-nightly
        path: artifacts/ubuntu-noble

  build-centos-8-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_centos_8_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-8@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_centos_8_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_centos_8_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-centos-8-x86_64-gel-nightly
        path: artifacts/centos-8

  build-centos-8-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_centos_8_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/centos-8@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_centos_8_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_centos_8_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-centos-8-aarch64-gel-nightly
        path: artifacts/centos-8

  build-rockylinux-9-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_rockylinux_9_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/rockylinux-9@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_rockylinux_9_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_rockylinux_9_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-rockylinux-9-x86_64-gel-nightly
        path: artifacts/rockylinux-9

  build-rockylinux-9-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_rockylinux_9_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/rockylinux-9@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_rockylinux_9_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_rockylinux_9_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-rockylinux-9-aarch64-gel-nightly
        path: artifacts/rockylinux-9

  build-linux-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_linux_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linux-x86_64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_linux_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_linux_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linux-x86_64-gel-nightly
        path: artifacts/linux-x86_64

  build-linux-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_linux_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linux-aarch64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_linux_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_linux_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linux-aarch64-gel-nightly
        path: artifacts/linux-aarch64

  build-linuxmusl-x86_64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'x64']
    needs: prep

    if: needs.prep.outputs.if_linuxmusl_x86_64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linuxmusl-x86_64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_linuxmusl_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_linuxmusl_x86_64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        PKG_PLATFORM_LIBC: "musl"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linuxmusl-x86_64-gel-nightly
        path: artifacts/linuxmusl-x86_64

  build-linuxmusl-aarch64-gel-nightly:
    runs-on: ['package-builder', 'self-hosted', 'linux', 'arm64']
    needs: prep

    if: needs.prep.outputs.if_linuxmusl_aarch64_gel_nightly == 'true'


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/linuxmusl-aarch64@master
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_linuxmusl_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=${{ needs.prep.outputs.nightly_linuxmusl_aarch64_gel_nightly }}"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_GENERIC: true
        PKG_PLATFORM_LIBC: "musl"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-linuxmusl-aarch64-gel-nightly
        path: artifacts/linuxmusl-aarch64

  build-macos-x86_64-gel-nightly:
    runs-on: ['macos-13']
    needs: prep

    if: needs.prep.outputs.if_macos_x86_64_gel_nightly == 'true'


    steps:

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Set up Python
      uses: actions/setup-python@v5
      if: true
      with:
        python-version: "3.x"

    - name: Set up NodeJS
      uses: actions/setup-node@v4
      if: true
      with:
        node-version: '20'

    - name: Install dependencies
      if: true
      run: |
        env HOMEBREW_NO_AUTO_UPDATE=1 brew install libmagic

    - name: Build
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_macos_x86_64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=nightly"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_ARCH: "x86_64"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled
        BUILD_GENERIC: true
      run: |
        edgedb-pkg/integration/macos/build.sh

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-macos-x86_64-gel-nightly
        path: artifacts/macos-x86_64

  build-macos-aarch64-gel-nightly:
    runs-on: ['macos-14']
    needs: prep

    if: needs.prep.outputs.if_macos_aarch64_gel_nightly == 'true'


    steps:

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Set up Python
      uses: actions/setup-python@v5
      if: true
      with:
        python-version: "3.x"

    - name: Set up NodeJS
      uses: actions/setup-node@v4
      if: true
      with:
        node-version: '20'

    - name: Install dependencies
      if: true
      run: |
        env HOMEBREW_NO_AUTO_UPDATE=1 brew install libmagic

    - name: Build
      env:
        PACKAGE: edgedbpkg.edgedb_ext.postgis:PostGIS
        SRC_REF: "${{ needs.prep.outputs.nightly_macos_aarch64_gel_nightly }}!${{ github.sha }}"
        PKG_REVISION: "<current-date>"
        PKG_TAGS: "extension=postgis,server_slot=nightly"
        PKG_COMPRESSION: "zstd,zip"
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_ARCH: "aarch64"
        EXTRA_OPTIMIZATIONS: "true"
        METAPKG_GIT_CACHE: disabled
        BUILD_GENERIC: true
      run: |
        edgedb-pkg/integration/macos/build.sh

    - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
      with:
        name: builds-macos-aarch64-gel-nightly
        path: artifacts/macos-aarch64

  publish-debian-buster-x86_64-gel-6-rc-2:
    needs: [build-debian-buster-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-buster-x86_64-gel-6-rc-2
        path: artifacts/debian-buster

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-buster-aarch64-gel-6-rc-2:
    needs: [build-debian-buster-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-buster-aarch64-gel-6-rc-2
        path: artifacts/debian-buster

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bullseye-x86_64-gel-6-rc-2:
    needs: [build-debian-bullseye-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bullseye-x86_64-gel-6-rc-2
        path: artifacts/debian-bullseye

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bullseye-aarch64-gel-6-rc-2:
    needs: [build-debian-bullseye-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bullseye-aarch64-gel-6-rc-2
        path: artifacts/debian-bullseye

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bookworm-x86_64-gel-6-rc-2:
    needs: [build-debian-bookworm-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bookworm-x86_64-gel-6-rc-2
        path: artifacts/debian-bookworm

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bookworm-aarch64-gel-6-rc-2:
    needs: [build-debian-bookworm-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bookworm-aarch64-gel-6-rc-2
        path: artifacts/debian-bookworm

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-focal-x86_64-gel-6-rc-2:
    needs: [build-ubuntu-focal-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-focal-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-focal

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-focal-aarch64-gel-6-rc-2:
    needs: [build-ubuntu-focal-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-focal-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-focal

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-jammy-x86_64-gel-6-rc-2:
    needs: [build-ubuntu-jammy-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-jammy-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-jammy

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-jammy-aarch64-gel-6-rc-2:
    needs: [build-ubuntu-jammy-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-jammy-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-jammy

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-noble-x86_64-gel-6-rc-2:
    needs: [build-ubuntu-noble-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-noble-x86_64-gel-6-rc-2
        path: artifacts/ubuntu-noble

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-noble-aarch64-gel-6-rc-2:
    needs: [build-ubuntu-noble-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-noble-aarch64-gel-6-rc-2
        path: artifacts/ubuntu-noble

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-centos-8-x86_64-gel-6-rc-2:
    needs: [build-centos-8-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-centos-8-x86_64-gel-6-rc-2
        path: artifacts/centos-8

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-centos-8-aarch64-gel-6-rc-2:
    needs: [build-centos-8-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-centos-8-aarch64-gel-6-rc-2
        path: artifacts/centos-8

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-rockylinux-9-x86_64-gel-6-rc-2:
    needs: [build-rockylinux-9-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-rockylinux-9-x86_64-gel-6-rc-2
        path: artifacts/rockylinux-9

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-rockylinux-9-aarch64-gel-6-rc-2:
    needs: [build-rockylinux-9-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-rockylinux-9-aarch64-gel-6-rc-2
        path: artifacts/rockylinux-9

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linux-x86_64-gel-6-rc-2:
    needs: [build-linux-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linux-x86_64-gel-6-rc-2
        path: artifacts/linux-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linux-aarch64-gel-6-rc-2:
    needs: [build-linux-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linux-aarch64-gel-6-rc-2
        path: artifacts/linux-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linuxmusl-x86_64-gel-6-rc-2:
    needs: [build-linuxmusl-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linuxmusl-x86_64-gel-6-rc-2
        path: artifacts/linuxmusl-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_LIBC: "musl"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linuxmusl-aarch64-gel-6-rc-2:
    needs: [build-linuxmusl-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linuxmusl-aarch64-gel-6-rc-2
        path: artifacts/linuxmusl-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_LIBC: "musl"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-buster-x86_64-gel-nightly:
    needs: [build-debian-buster-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-buster-x86_64-gel-nightly
        path: artifacts/debian-buster

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-buster-aarch64-gel-nightly:
    needs: [build-debian-buster-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-buster-aarch64-gel-nightly
        path: artifacts/debian-buster

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bullseye-x86_64-gel-nightly:
    needs: [build-debian-bullseye-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bullseye-x86_64-gel-nightly
        path: artifacts/debian-bullseye

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bullseye-aarch64-gel-nightly:
    needs: [build-debian-bullseye-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bullseye-aarch64-gel-nightly
        path: artifacts/debian-bullseye

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bullseye"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bookworm-x86_64-gel-nightly:
    needs: [build-debian-bookworm-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bookworm-x86_64-gel-nightly
        path: artifacts/debian-bookworm

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-debian-bookworm-aarch64-gel-nightly:
    needs: [build-debian-bookworm-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-debian-bookworm-aarch64-gel-nightly
        path: artifacts/debian-bookworm

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "bookworm"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-focal-x86_64-gel-nightly:
    needs: [build-ubuntu-focal-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-focal-x86_64-gel-nightly
        path: artifacts/ubuntu-focal

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-focal-aarch64-gel-nightly:
    needs: [build-ubuntu-focal-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-focal-aarch64-gel-nightly
        path: artifacts/ubuntu-focal

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "focal"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-jammy-x86_64-gel-nightly:
    needs: [build-ubuntu-jammy-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-jammy-x86_64-gel-nightly
        path: artifacts/ubuntu-jammy

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-jammy-aarch64-gel-nightly:
    needs: [build-ubuntu-jammy-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-jammy-aarch64-gel-nightly
        path: artifacts/ubuntu-jammy

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "jammy"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-noble-x86_64-gel-nightly:
    needs: [build-ubuntu-noble-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-noble-x86_64-gel-nightly
        path: artifacts/ubuntu-noble

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-ubuntu-noble-aarch64-gel-nightly:
    needs: [build-ubuntu-noble-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-ubuntu-noble-aarch64-gel-nightly
        path: artifacts/ubuntu-noble

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "ubuntu"
        PKG_PLATFORM_VERSION: "noble"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-centos-8-x86_64-gel-nightly:
    needs: [build-centos-8-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-centos-8-x86_64-gel-nightly
        path: artifacts/centos-8

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-centos-8-aarch64-gel-nightly:
    needs: [build-centos-8-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-centos-8-aarch64-gel-nightly
        path: artifacts/centos-8

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "centos"
        PKG_PLATFORM_VERSION: "8"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-rockylinux-9-x86_64-gel-nightly:
    needs: [build-rockylinux-9-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-rockylinux-9-x86_64-gel-nightly
        path: artifacts/rockylinux-9

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-rockylinux-9-aarch64-gel-nightly:
    needs: [build-rockylinux-9-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-rockylinux-9-aarch64-gel-nightly
        path: artifacts/rockylinux-9

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "rockylinux"
        PKG_PLATFORM_VERSION: "9"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linux-x86_64-gel-nightly:
    needs: [build-linux-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linux-x86_64-gel-nightly
        path: artifacts/linux-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linux-aarch64-gel-nightly:
    needs: [build-linux-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linux-aarch64-gel-nightly
        path: artifacts/linux-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linuxmusl-x86_64-gel-nightly:
    needs: [build-linuxmusl-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linuxmusl-x86_64-gel-nightly
        path: artifacts/linuxmusl-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "x86_64"
        PKG_PLATFORM_LIBC: "musl"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-linuxmusl-aarch64-gel-nightly:
    needs: [build-linuxmusl-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-linuxmusl-aarch64-gel-nightly
        path: artifacts/linuxmusl-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "linux"
        PKG_PLATFORM_VERSION: "aarch64"
        PKG_PLATFORM_LIBC: "musl"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-macos-x86_64-gel-6-rc-2:
    needs: [build-macos-x86_64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-macos-x86_64-gel-6-rc-2
        path: artifacts/macos-x86_64

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: macos-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "x86_64"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-macos-aarch64-gel-6-rc-2:
    needs: [build-macos-aarch64-gel-6-rc-2]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-macos-aarch64-gel-6-rc-2
        path: artifacts/macos-aarch64

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: macos-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "aarch64"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-macos-x86_64-gel-nightly:
    needs: [build-macos-x86_64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-macos-x86_64-gel-nightly
        path: artifacts/macos-x86_64

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: macos-x86_64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "x86_64"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  publish-macos-aarch64-gel-nightly:
    needs: [build-macos-aarch64-gel-nightly]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        name: builds-macos-aarch64-gel-nightly
        path: artifacts/macos-aarch64

    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-pkg
        ref: master
        path: edgedb-pkg

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: macos-aarch64

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "nightly"
        PKG_PLATFORM: "macos"
        PKG_PLATFORM_VERSION: "aarch64"
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  workflow-notifications:
    if: failure() && github.event_name != 'pull_request'
    name: Notify in Slack on failures

    needs:
      - prep
      - build-debian-buster-x86_64-gel-6-rc-2
      - publish-debian-buster-x86_64-gel-6-rc-2
      - build-debian-buster-aarch64-gel-6-rc-2
      - publish-debian-buster-aarch64-gel-6-rc-2
      - build-debian-bullseye-x86_64-gel-6-rc-2
      - publish-debian-bullseye-x86_64-gel-6-rc-2
      - build-debian-bullseye-aarch64-gel-6-rc-2
      - publish-debian-bullseye-aarch64-gel-6-rc-2
      - build-debian-bookworm-x86_64-gel-6-rc-2
      - publish-debian-bookworm-x86_64-gel-6-rc-2
      - build-debian-bookworm-aarch64-gel-6-rc-2
      - publish-debian-bookworm-aarch64-gel-6-rc-2
      - build-ubuntu-focal-x86_64-gel-6-rc-2
      - publish-ubuntu-focal-x86_64-gel-6-rc-2
      - build-ubuntu-focal-aarch64-gel-6-rc-2
      - publish-ubuntu-focal-aarch64-gel-6-rc-2
      - build-ubuntu-jammy-x86_64-gel-6-rc-2
      - publish-ubuntu-jammy-x86_64-gel-6-rc-2
      - build-ubuntu-jammy-aarch64-gel-6-rc-2
      - publish-ubuntu-jammy-aarch64-gel-6-rc-2
      - build-ubuntu-noble-x86_64-gel-6-rc-2
      - publish-ubuntu-noble-x86_64-gel-6-rc-2
      - build-ubuntu-noble-aarch64-gel-6-rc-2
      - publish-ubuntu-noble-aarch64-gel-6-rc-2
      - build-centos-8-x86_64-gel-6-rc-2
      - publish-centos-8-x86_64-gel-6-rc-2
      - build-centos-8-aarch64-gel-6-rc-2
      - publish-centos-8-aarch64-gel-6-rc-2
      - build-rockylinux-9-x86_64-gel-6-rc-2
      - publish-rockylinux-9-x86_64-gel-6-rc-2
      - build-rockylinux-9-aarch64-gel-6-rc-2
      - publish-rockylinux-9-aarch64-gel-6-rc-2
      - build-linux-x86_64-gel-6-rc-2
      - publish-linux-x86_64-gel-6-rc-2
      - build-linux-aarch64-gel-6-rc-2
      - publish-linux-aarch64-gel-6-rc-2
      - build-linuxmusl-x86_64-gel-6-rc-2
      - publish-linuxmusl-x86_64-gel-6-rc-2
      - build-linuxmusl-aarch64-gel-6-rc-2
      - publish-linuxmusl-aarch64-gel-6-rc-2
      - build-macos-x86_64-gel-6-rc-2
      - publish-macos-x86_64
      - build-macos-aarch64-gel-6-rc-2
      - publish-macos-aarch64
      - build-debian-buster-x86_64-gel-nightly
      - publish-debian-buster-x86_64-gel-nightly
      - build-debian-buster-aarch64-gel-nightly
      - publish-debian-buster-aarch64-gel-nightly
      - build-debian-bullseye-x86_64-gel-nightly
      - publish-debian-bullseye-x86_64-gel-nightly
      - build-debian-bullseye-aarch64-gel-nightly
      - publish-debian-bullseye-aarch64-gel-nightly
      - build-debian-bookworm-x86_64-gel-nightly
      - publish-debian-bookworm-x86_64-gel-nightly
      - build-debian-bookworm-aarch64-gel-nightly
      - publish-debian-bookworm-aarch64-gel-nightly
      - build-ubuntu-focal-x86_64-gel-nightly
      - publish-ubuntu-focal-x86_64-gel-nightly
      - build-ubuntu-focal-aarch64-gel-nightly
      - publish-ubuntu-focal-aarch64-gel-nightly
      - build-ubuntu-jammy-x86_64-gel-nightly
      - publish-ubuntu-jammy-x86_64-gel-nightly
      - build-ubuntu-jammy-aarch64-gel-nightly
      - publish-ubuntu-jammy-aarch64-gel-nightly
      - build-ubuntu-noble-x86_64-gel-nightly
      - publish-ubuntu-noble-x86_64-gel-nightly
      - build-ubuntu-noble-aarch64-gel-nightly
      - publish-ubuntu-noble-aarch64-gel-nightly
      - build-centos-8-x86_64-gel-nightly
      - publish-centos-8-x86_64-gel-nightly
      - build-centos-8-aarch64-gel-nightly
      - publish-centos-8-aarch64-gel-nightly
      - build-rockylinux-9-x86_64-gel-nightly
      - publish-rockylinux-9-x86_64-gel-nightly
      - build-rockylinux-9-aarch64-gel-nightly
      - publish-rockylinux-9-aarch64-gel-nightly
      - build-linux-x86_64-gel-nightly
      - publish-linux-x86_64-gel-nightly
      - build-linux-aarch64-gel-nightly
      - publish-linux-aarch64-gel-nightly
      - build-linuxmusl-x86_64-gel-nightly
      - publish-linuxmusl-x86_64-gel-nightly
      - build-linuxmusl-aarch64-gel-nightly
      - publish-linuxmusl-aarch64-gel-nightly
      - build-macos-x86_64-gel-nightly
      - publish-macos-x86_64
      - build-macos-aarch64-gel-nightly
      - publish-macos-aarch64
    runs-on: ubuntu-latest
    permissions:
      actions: 'read'
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@26a36836c887f260477432e4314ec3490a84f309
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.ACTIONS_SLACK_WEBHOOK_URL}}
          name: 'Workflow notifications'
          icon_emoji: ':hammer:'
          include_jobs: 'on-failure'
